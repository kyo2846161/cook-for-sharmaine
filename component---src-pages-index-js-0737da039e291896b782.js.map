{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Greetings.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://gatsby-starter-default/./src/components/ButtonChooseMeal.js","webpack://gatsby-starter-default/./src/pages/index.js"],"names":["Greetings","props","state","img","data","greeting_img","txt","greeting_txt","moment","current_moment","size","status","homePage","componentDidMount","console","log","this","render","bg","className","React","_assertThisInitialized","self","ReferenceError","btnCSS","value","onClick","click","enTxt","cnTxt","icon","faChevronRight","useDelayUnmount","isMounted","delayTime","useState","shouldRender","setShouldRender","useEffect","timeoutId","setTimeout","clearTimeout","currentPage","setCurrentPage","prevPage","setPrevPage","pageHomeMount","setPageHomeMount","pageLandingMount","setPageLandingMount","pageIngredientsMount","setPageIngredientsMount","shouldRenderPageHome","shouldRenderPageLanding","shouldRenderPageIngredients","mountedStyle","animation","opacity","unmountedStyle","handleToggleClicked","event","timeout_forOnce","target","name","style","S","src","height","quality","formats","alt","back"],"mappings":"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","file":"component---src-pages-index-js-0737da039e291896b782.js","sourcesContent":["import React from 'react'\r\n\r\nclass Greetings extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            img : props.data.greeting_img,\r\n            txt : props.data.greeting_txt,\r\n            moment : props.data.current_moment,\r\n            size : props.size,\r\n            status : props.data.homePage,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.state.status)\r\n    }\r\n    render(){\r\n        const size = this.state.size === \"full\" ? \"\" : \"mx-3\";\r\n        const bg = this.state.img;\r\n        console.log(this.state.status)\r\n        // console.log(bg)\r\n        return(\r\n            <div className={`greetings_container ${size} ${bg} fade ${this.state.status ? \"show\" : \"hide\"}`}>\r\n                <h5 className={`mb-0 shadow`}>{this.state.txt}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Greetings","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useState } from 'react'\r\n\r\nfunction ButtonChooseMeal(props){\r\n    // const [cnTxt, setCnTxt] = useState(props.cnTxt);\r\n    // const [enTxt, setEnTxt] = useState(props.enTxt);\r\n    return (\r\n        <button className={`btn btn_chooseMeal ${props.btnCSS}`} value={props.value} onClick={props.click}>\r\n            <div className=\"row align-items-center\">\r\n            <div className=\"col\">\r\n                <span className=\"en\">{props.enTxt}</span>\r\n                <span className=\"cn\">{props.cnTxt}</span>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                <FontAwesomeIcon icon={faChevronRight} />\r\n            </div>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonChooseMeal","// import * as React from \"react\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Greetings from \"../components/Greetings\"\r\nimport Header from \"../components/header\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faChevronRight, faCoffee } from \"@fortawesome/free-solid-svg-icons\"\r\nimport ButtonChooseMeal from \"../components/ButtonChooseMeal\"\r\n\r\nfunction useDelayUnmount(isMounted, delayTime) {\r\n  const [shouldRender, setShouldRender] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timeoutId;\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true);\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime);\r\n    }\r\n    return () => clearTimeout(timeoutId);\r\n  }, [isMounted, delayTime, shouldRender]);\r\n  return shouldRender;\r\n}\r\n\r\nconst IndexPage = () =>{\r\n  const [currentPage, setCurrentPage] = useState(\"landing\");\r\n  const [prevPage, setPrevPage] = useState(\"none\");\r\n  const [isMounted, setIsMounted] = useState(true);\r\n  const [pageHomeMount, setPageHomeMount] = useState(false);\r\n  const [pageLandingMount, setPageLandingMount] = useState(true);\r\n  const [pageIngredientsMount, setPageIngredientsMount] = useState(false);\r\n\r\n  const shouldRenderChild = useDelayUnmount(isMounted, 350);\r\n  const shouldRenderPageHome = useDelayUnmount(pageHomeMount, 350);\r\n  const shouldRenderPageLanding = useDelayUnmount(pageLandingMount, 350);\r\n  const shouldRenderPageIngredients = useDelayUnmount(pageIngredientsMount, 350);\r\n  const mountedStyle = { animation: \"inAnimation 350ms ease-in forwards\", opacity: 0 };\r\n  const unmountedStyle = { animation: \"outAnimation 350ms ease-out forwards\", opacity: 0 };\r\n  const handleToggleClicked = (event) => {\r\n    const {name, value} = event.target\r\n    switch(currentPage){ // to fade out\r\n      case \"landing\":\r\n        setPageLandingMount(false);\r\n        break;\r\n      case \"home\":\r\n        setPageHomeMount(false);\r\n        break;\r\n      case \"ingredients\":\r\n        setPageIngredientsMount(false);\r\n        break;\r\n    }\r\n    // setPageHomeMount(!pageHomeMount);\r\n    let timeout_forOnce;\r\n    timeout_forOnce = setTimeout(() => {\r\n      switch(value){ // to fade in\r\n        case \"landing\":\r\n          setPageLandingMount(true);\r\n          break;\r\n        case \"home\":\r\n          setPageHomeMount(true);\r\n          break;\r\n        case \"ingredients\":\r\n          setPageIngredientsMount(true);\r\n          break;        \r\n      }\r\n      setPrevPage(currentPage);\r\n      setCurrentPage(value);\r\n    }, 350);\r\n    return () => clearTimeout(timeout_forOnce);\r\n  };\r\n  const timeout_landing = setTimeout(() => {\r\n    setPageLandingMount(false);\r\n    setPageHomeMount(true);\r\n    setCurrentPage(\"home\");\r\n  },3000)\r\n  return (\r\n    <>\r\n    {/* <Header /> */}\r\n    <main>\r\n      {shouldRenderPageLanding && (\r\n        <div className=\"pageLanding bg-primary\" style={pageLandingMount ? mountedStyle : unmountedStyle}>\r\n          <StaticImage\r\n              src=\"../images/logo_white.png\"\r\n              height={38}\r\n              quality={95}\r\n              formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\r\n              alt=\"Feed Sharmaine Everyday\"\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {shouldRenderPageHome && (\r\n        <div style={pageHomeMount ? mountedStyle : unmountedStyle}>\r\n          <Header back={prevPage} />\r\n          <div className=\"headerPadding\">\r\n            {/* <button className=\"btn btn_chooseMeal btn-1\" value=\"ingredients\" onClick={handleToggleClicked}>\r\n              <div className=\"row align-items-center\">\r\n                <div className=\"col\">\r\n                  <span className=\"en\">breakfast</span>\r\n                  <span className=\"cn\">做早餐</span>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <FontAwesomeIcon icon={faChevronRight} />\r\n                </div>\r\n              </div>\r\n            </button> */}\r\n            <ButtonChooseMeal btnCSS=\"btn-1\" value=\"breakfast\" click={handleToggleClicked} enTxt=\"breakfast\" cnTxt=\"做早餐\" />\r\n            <ButtonChooseMeal btnCSS=\"btn-2\" value=\"lunch\" click={handleToggleClicked} enTxt=\"lunch\" cnTxt=\"做午餐\" />\r\n            <ButtonChooseMeal btnCSS=\"btn-3\" value=\"dinner\" click={handleToggleClicked} enTxt=\"dinner\" cnTxt=\"做晚餐\" />\r\n            <ButtonChooseMeal btnCSS=\"btn-4\" value=\"random\" click={handleToggleClicked} enTxt=\"anything\" cnTxt=\"隨便來個食譜\" />\r\n            {/* <button className=\"btn btn_chooseMeal btn-2\" value=\"ingredients\" onClick={handleToggleClicked}><span>做午餐</span></button>\r\n            <button className=\"btn btn_chooseMeal btn-3\" value=\"ingredients\" onClick={handleToggleClicked}><span>做午餐</span></button>\r\n            <button className=\"btn btn_chooseMeal btn-4\" value=\"ingredients\" onClick={handleToggleClicked}><span>隨便來個食譜</span></button> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shouldRenderPageIngredients && (\r\n        <div style={pageIngredientsMount ? mountedStyle : unmountedStyle}>\r\n          <h1 >Ingredients</h1>\r\n          <button value=\"home\" onClick={handleToggleClicked}>go home</button>\r\n        </div>\r\n      )}\r\n    </main>\r\n    </>\r\n  );\r\n}\r\n\r\nclass IndexPage2 extends React.Component {\r\n  constructor(){\r\n    super();\r\n    \r\n    const date = new Date();\r\n    const hours = date.getHours();\r\n    const check_current_moment = hours <= 6 ?  \"凌晨\" : hours >=7 && hours <12? \"早上\" : hours === 12? \"中午\" : hours >=13 && hours < 19 ? \"下午\" : \"晚上\";\r\n    let greeting_txt =\"\", greeting_img = \"\"\r\n    switch(check_current_moment){\r\n        case \"凌晨\":\r\n          greeting_txt = \"凌晨了\\n\\n不打擾您享受個人時光\";\r\n          greeting_img = \"meal_aftermeal\";\r\n            break;\r\n        case \"早上\":\r\n          greeting_txt = \"早安\\n今天也會是元氣滿滿的一天！\";\r\n          greeting_img = \"meal_breakfast\";\r\n            break;\r\n        case \"中午\":\r\n          greeting_txt = \"午安\\n開個冷氣唄\";\r\n          greeting_img = \"meal_lunch\";\r\n            break;\r\n        case \"下午\":\r\n          greeting_txt = \"下午好\\n來杯咖啡？\";\r\n          greeting_img = \"meal_teatime\";\r\n            break;\r\n        case \"晚上\":\r\n          greeting_txt = \"晚安親愛的\\n\\n今天辛苦了，\\n好好休息唄\";\r\n          greeting_img = \"meal_dinner\";\r\n            break;\r\n        default:\r\n          greeting_txt = \"你好，\\n交個朋友吧\";\r\n          greeting_img = \"meal_teatime\";\r\n          break;\r\n    }\r\n\r\n    this.state = {\r\n      current_moment: check_current_moment,\r\n      greeting_txt : greeting_txt,\r\n      greeting_img : greeting_img,\r\n      currentPage: \"home\",\r\n      nextPage: \"\",\r\n      homePage: false,\r\n      ingredientsPage: false,\r\n      recipePage: false,\r\n    };\r\n    console.log(this.state)\r\n\r\n    this.handleClick = this.handleClick.bind(this)\r\n    this.handlePageSwitching = this.handlePageSwitching.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({homePage: true})\r\n  }\r\n  \r\n  handleClick(event){\r\n    const e = event.target;\r\n    const {name, value} = e;\r\n    this.setState({[name] : value})\r\n  }\r\n\r\n  handlePageSwitching(event) {\r\n    const [name, value] = event;\r\n    \r\n  }\r\n\r\n  render(){\r\n    const currentPage = this.state.currentPage;\r\n    console.log(this.state.homePage)\r\n    // const pageContent = currentPage === \"home\" ? <Greetings data={this.state} size=\"full\" /> : currentPage === \"ingredients\" ? \"ingredients page\" : null\r\n\r\n\r\n\r\n    const transitionOptions = {\r\n      transitionName: \"fade\",\r\n      transitionEnterTimeout: 500,\r\n      transitionLeaveTimeout: 500\r\n    }\r\n\r\n    let theChild = undefined;\r\n    if (this.state.currentPage === 'one') {\r\n        theChild = <Greetings data={this.state} />;\r\n    } else {\r\n        theChild = \"123123\";\r\n    } \r\n\r\n    return(\r\n      <div className=\"page_home\">\r\n        <Layout>\r\n          <SEO title=\"Home\" />\r\n\r\n          <button name=\"currentPage\" value=\"ingredients\" onClick={this.handlePageSwitching}>change state</button>\r\n          {/* <Greetings data={this.state} size=\"full\" /> */}\r\n          <Link to=\"/ingredients/\" state={{type : `breakfast`}}>做早餐</Link>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }  \r\n}\r\n\r\n// const IndexPage = () => (\r\n//   <Layout>\r\n//     <Greetings />\r\n//     123\r\n//     <SEO title=\"Home\" />\r\n//     <h1>Hi people</h1>\r\n//     <p>Welcome to your new Gatsby site.</p>\r\n//     <p>Now go build something great.</p>\r\n//     <StaticImage\r\n//       src=\"../images/gatsby-astronaut.png\"\r\n//       width={300}\r\n//       quality={95}\r\n//       formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\r\n//       alt=\"A Gatsby astronaut\"\r\n//       style={{ marginBottom: `1.45rem` }}\r\n//     />\r\n//     <p>\r\n//       <Link to=\"/page-2/\">Go to page 2</Link> <br />\r\n//       <Link to=\"/using-typescript/\">Go to \"Using TypeScript\"</Link>\r\n//     </p>\r\n//   </Layout>\r\n// )\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}